This module provides access to the CreditCard class

Usage:
    c1 = CreditCard(network='Visa', number='4111111111111111')
    c1.info()

    p1 = Person()
    p1.create('pt_BR')
    c2 = CreditCard(person=p1)
    c2.info()


The CreditCard object can be initialised empty or with arguments
If not provided, credit card data will be automatically set

Arguments:
    network (str), optional: as in `Visa`, `Mastercard`, `Hipercard`
    issuer (str), optional: as in `Bank of China`, `Lloyds`, `Baroda`
    number (int), optional: recommended 14 to 16 numbers
    expiration (str), optional: recommended to follow `MM/YY` format

    person (obj), optional:
        send a constructed Person object to replace holder_name
        person has precedence over holder_name argument

    holder_name (str), optional:
        recommended to have two or more names
        or use person argument to use a Person object

    name_origin (str), optional:
        If sent, must follow ISOs 3166 and 639, as in `pt_BR`
        If a holder_name is provided, this should qualify holder's origin
        If neither a holder nor a person is provided, name_origin may help
        to automatically create a new person with name from this origin
        If network and/or issuer are not provided, this value may help
        choosing not only between global networks or issuers, but also
        between local ones, if avaliable in networks (line 24) and issuers

Attributes:
    network (str),
    issuer (str),
    number (int),
    holder_name (str),
    holder_id (str),
    expiration (str)

Methods:
    info() -> dict:
        Return a dictionary with Credit Card object data

    def csv(self) -> str:
        Return a csv string with Credit Card object data

